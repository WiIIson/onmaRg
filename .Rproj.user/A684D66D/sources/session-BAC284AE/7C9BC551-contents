---
title: "TCDSB - Community OnMarg Dimensions"
author: "Conley"
date: "04/07/2022"
output: html_document
---

## Ontario Marginalization Index Background

The Ontario Marginalization Index is a data model that has been developed and maintained by Ontario Public Health and St. Michael's Hospital.  This data model is constructed with the four domains of Residential Instability, Material Deprivation, Dependency and Ethnic Concentration which describe different aspects of marginalization that is experienced by communities.

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

# ===============
# Loading package
# ===============
library(tidyverse)    # Data cleaning functions
library(readxl)       # Loading data from Excel
library(httr)         # Read data from URL
library(sf)           # Spatial features package to read shape files
library(RColorBrewer) # Colour palettes for the map
library(leaflet)      # Street maps
library(shiny)        # Shiny dashboard

# ==============
# Set Parameters
# ==============

# Student file
student_file_name <- "C:/Users/willi/Documents/Professional Work/TCDSB-2022-OnMarg/Data/2021_StudentData_Scrub/SHP/2021_StudentData_Scrub.dbf"
DA_SHP_name <- "C:/Users/willi/Documents/Professional Work/TCDSB-2022-OnMarg/Data/Shapefiles/lda/lda_000b16a_e.shp"
school_file_name <- "C:/Users/willi/Documents/Professional Work/TCDSB-2022-OnMarg/Data/EPAN_Data/SHP/2022_TCDSB_Sites.shp"
superintendent_SHP_name <- "C:/Users/willi/Documents/Professional Work/TCDSB-2022-OnMarg/Data/EPAN_Data/SHP/Superintendent_Area.shp"
attendence_SHP_name <- "C:/Users/willi/Documents/Professional Work/TCDSB-2022-OnMarg/Data/EPAN_Data/SHP/Fixed_Attendance_Boundaries.shp"

CRS_to_use <- st_crs("+init=EPSG:2962") # NAD83 UTM Zone 17N
main_city <- "Toronto"

# ====================
# Loading ON-Marg data
# ====================

# Gets the name of a file from its URL
getFileName <- function(url) {
  str_extract(url, "\\/([a-z]|[0-9]|_)+.zip") %>%
    substring(2) %>%
    str_replace(".zip", ".dbf")
}

# Extracts dbf files from zip format
extractFromZip <- function(url) {
  tempDir <- tempdir()
  tempFile <- tempfile()
  
  filename <- getFileName(url)

  download.file(url, tempFile, quiet=TRUE, mode="wb")
  unzip(tempFile, filename, exdir=tempDir)
  
  filepath <- paste0(tempDir, "/", filename)
  return(foreign::read.dbf(filepath))
}

# Gets ON-Marg DA data given a year and csd
OnMargDA <- function(year) {
  year <- toString(year)
  switch(year,
    "2001"={
      url <- "http://www.ontariohealthprofiles.ca/onmarg/userguide_data/ON-Marg_2001_updated_May_2012.xls"
      page <- "da_01"
      format <- ".xls"
    },
    "2006"={
      url <- "http://www.ontariohealthprofiles.ca/onmarg/userguide_data/ON-Marg_2006_updated_May_2012.xls"
      page <- "da_06"
      format <- ".xls"
    },
    "2011"={
      url <- "https://www.publichealthontario.ca/-/media/Data-Files/index-on-marg-2011.xlsx?la=en&sc_lang=en&hash=88EFEB83D1A1DFC5A90517AE2E71C855"
      page <- "DA_2011"
      format <- ".xlsx"
    },
    "2016"={
      url <- "https://www.publichealthontario.ca/-/media/Data-Files/index-on-marg.xls?sc_lang=en" # Identifies URL for the year
      page <- "DA_2016"                                                                           # Identifies worksheet in the file
      format <- ".xls"                                                                            # Identifies format of the file
      stat_url <- "https://www12.statcan.gc.ca/census-recensement/2011/geo/bound-limit/files-fichiers/2016/lda_000b16a_e.zip"
    },
    {
      # Breaks if an invalid ON-Marg year is entered
      stop("Invalid OnMarg year entered")
    }
  )
  
  # Loads the worksheet into a temporary file (tf)
  GET(url, write_disk(tf <- tempfile(fileext=format)))
  
  # Extracts DA ON-Marg data
  df1 <- extractFromZip(stat_url) %>%
    select(DAUID, CSDNAME, CSDTYPE, CTUID, CTNAME)
  
  # Extracts geographic location
  df2 <- read_excel(tf, sheet=page)
  
  # Merges geographic location with ON-Marg values and returns the data frame
  return(merge(df1, df2, by="DAUID"))
}

# Loads ON-Marg data for a given year
OnMarg_16 <- OnMargDA(2016)
```



```{r, include=FALSE}
# ================================
# Loading DAs and Attaching OnMarg
# ================================

# Loading the shape file
DA_SHP <- st_read(DA_SHP_name, stringsAsFactors=FALSE) %>%
  st_transform(CRS_to_use) %>%
  select(-CSDNAME, -CSDTYPE, -CTUID, -CTNAME)

# Merge with ON-Marg data and create index column
DA_OnMarg <- merge(DA_SHP, OnMarg_16, by="DAUID") %>%
  mutate(index=(Dependency_q_DA16 + Deprivation_q_DA16 + Ethniccon_q_DA16 + Instability_q_DA16)/4)

# ============================
# Loading Student Data and DAs
# ============================

# Get student data
student_data <- foreign::read.dbf(student_file_name, as.is=TRUE) %>%
  filter(X > 0)

# Geocoding student location
student_geo <- st_as_sf(student_data,
                        coords=c("X", "Y"),
                        crs="+init=EPSG:26917") %>%
  mutate(SchoolCode = as.numeric(SchoolCode)) %>%
  st_transform(CRS_to_use)

# Find the DAs that students are in
student_geo <- st_join(student_geo, left=FALSE, DA_OnMarg)

student_DA <- student_geo$DAUID %>%
  unique()

# ===================================
# Filtering DAs for Student Locations
# ===================================

# Filter DA_OnMarg by the main city and DAs students are in
DA_OnMarg <- filter(DA_OnMarg, CCSNAME == main_city | DAUID %in% student_DA) %>%
  mutate(isMainCity = CSDNAME == main_city)

# Re-project data for leaflet
toronto_DA <- st_transform(DA_OnMarg, 4326)

```



```{r, include=FALSE}
# =====================
# Load School Locations
# =====================

school_SHP <- st_read(school_file_name, stringsAsFactors=FALSE) %>%
  st_transform(4326) %>%
  mutate(x=st_coordinates(geometry)[,1], y=st_coordinates(geometry)[,2])


total_Dep5Percent <- mean(student_geo$Deprivation_q_DA16 == 5)

# Table of student data by school
school_table <- student_geo %>%
  group_by(SchoolCode, Name) %>%
  summarise(
    Total=n(),
    RelativeTotal=n()/nrow(student_geo) * length(unique(student_geo$SchoolCode)) * 10,
    Dep1=sum(Deprivation_q_DA16==1),
    Dep2=sum(Deprivation_q_DA16==2),
    Dep3=sum(Deprivation_q_DA16==3),
    Dep4=sum(Deprivation_q_DA16==4),
    Dep5=sum(Deprivation_q_DA16==5),
    Dep5Percent=round(Dep5/Total,2),
    Disproportionality=round(Dep5Percent/total_Dep5Percent,4),
    CDI=mean(index)
  ) %>%
  arrange(Dep5Percent) %>%
  st_drop_geometry()

School_SHP_table <- school_SHP %>%
  mutate(SchoolCode=Scode) %>%
  merge(school_table, by="SchoolCode")
```


```{r, include=FALSE}

# Load superintendent shape file
superintendent_SHP <- st_read(superintendent_SHP_name, stringsAsFactors=FALSE) %>%
  st_transform(4326)

```


```{r, include=FALSE}
# =============================
# Functions For Generating Maps
# =============================

# Define colour palette
assign_colour <- function(nums, level) {
  colours <- colorRampPalette(brewer.pal(5,"PuRd"))(17)
  pal <- vector()
  for (num in nums) {
    if (is.na(num) || (level != 0 && level != num)) {
      pal <- append(pal, "#EBEBEB")
    }
    else {
      pal <- append(pal, colours[18 - ((6 - num) * 4 - 3)])
    }
  }
  return(pal)
}


generate_site_markers <- function() {
  site_markers <- leaflet(School_SHP_table) %>%
    addTiles() %>%
    addCircleMarkers(
      lng=~x,
      lat=~y,
      radius=~RelativeTotal,
      color=assign_colour(floor(School_SHP_table$Dep5Percent / 20) + 1, 0)
      #clusterOptions = markerClusterOptions()
    )
  
    return(site_markers)
}

generate_site_markers()

# Generate map from column of OnMarg dimensions
generateMap <- function(col, level) {
  p_popup <- paste0("<strong>Level: </strong>", col)  # Set popup message
  
  marg_map <- leaflet(toronto_DA) %>%
    addTiles() %>%    # Add background
    addPolygons(      # Add DA tiles
      stroke=FALSE,
      color=assign_colour(col,level),
      fillOpacity=0.8,
      smoothFactor=0.5,
      popup=p_popup,
      layerId=col,
      group="DA Tiles"
    ) %>%
    addPolygons(      # Add superintendent tiles
      data=superintendent_SHP,
      opacity=1,
      color="Black",
      fill=FALSE,
      group="Superintendent Boundaries"
    ) %>%
    addCircleMarkers( # Add school points
      data=School_SHP_table,
      lng=~x,
      lat=~y,
      radius=0.1,
      color="Black",
      opacity=0.6,
      label=School_SHP_table$Name.x,
      #labelOptions = labelOptions(noHide=TRUE),
      group="Schools"
    ) %>%
    addCircleMarkers( # Add school points
      data=School_SHP_table,
      lng=~x,
      lat=~y,
      radius=0.1,
      color="Black",
      opacity=0,
      label=School_SHP_table$Name.x,
      labelOptions = labelOptions(noHide=TRUE),
      group="Names"
    ) %>%
    groupOptions("Names", zoomLevels = 14:20) %>%
    addLayersControl(
      overlayGroups=c("Superintendent Boundaries", "Schools", "Names")
    )
  
  return(marg_map)
}
```

## Plots {.tabset .tabset-pills}

The map for each dimension is divided into 5 provincial quintiles where:

- **Quintile 1** describes neighbourhoods as having low stress according to the dimension
- **Quintile 5** describes neighbourhoods as having high stress according to the dimension


### Residential Instability {.active}

This measure refers to area-level concentrations of people who experience high rates of family or housing instability. The indicators included in this dimension measure the types and density of residential accommodations, as well as certain family structure characteristics. Residential instability is important, as it related to neighborhood quality, cohesiveness and supports.

```{r, echo=FALSE, warning=FALSE}
generateMap(toronto_DA$Instability_q_DA16, 0)
```

### Material Deprivation

Material deprivation is closely connected to poverty and it refers to inability for individuals and communities to access and attain basic material needs. The indicators included in this dimension measure income, quality of housing, educational attainment and family structure characteristics.

```{r, echo=FALSE, warning=FALSE}
generateMap(toronto_DA$Deprivation_q_DA16, 0)
```

### Dependency

This measure refers to area-level concentrations of people who do not have income from employment. It includes seniors, children and adults whose work is not compensated. Adults included under this measure may be taking care of households, taking care of people in the community and/or prevented from working due to disability.

```{r, echo=FALSE, warning=FALSE}
generateMap(toronto_DA$Dependency_q_DA16, 0)
```

### Ethnic Concentration

This measure refers to high area-level concentrations of people who are recent immigrants and/or people belonging to a ‘visible minority’ group (defined by Statistics Canada as “persons, other than aboriginal peoples, who are non-Caucasian in race or non-white in colour”). Statistics Canada Aboriginal status indicators did not load on any of the factors during initial factor analysis. Research on immigration in Ontario shows that newcomers to Canada often have better overall health outcomes, 17 a phenomenon commonly known as the “healthy immigrant effect.” At the same time, research is clear that both structural racism and anti-immigrant discrimination have profound impacts on individual, community and population health.

```{r, echo=FALSE, warning=FALSE}
generateMap(toronto_DA$Ethniccon_q_DA16, 0)
```

### Index Score

This measure refers to a summary score calculated as the average between the previous four measures. This provides an overview as to the needs of a particular area.

```{r, echo=FALSE, warning=FALSE}
generateMap(toronto_DA$index, 0)
```

## {}
